<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Página profissional</title>
    <link>/post/</link>
    <description>Recent content in Posts on Página profissional</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>&amp;copy; 2017 Davi Toshio</copyright>
    <lastBuildDate>Mon, 01 Jan 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/post/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Credit Risk Modeling in R (DataCamp, 4h)</title>
      <link>/post/credit_risk_r/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/credit_risk_r/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/certificates/Credit_Risk_Modeling_R.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.datacamp.com/statement-of-accomplishment/course/ff790720ef23fc9bdfbe4634a0ea11f3ab61aa7a&#34;&gt;(Link do certificado para download)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ID da licença: ff790720ef23fc9bdfbe4634a0ea11f3ab61aa7a&lt;/p&gt;
&lt;div align=&#34;justify&#34;&gt;
&lt;p&gt;This hands-on-course with real-life credit data will teach you how to model credit risk by using logistic regression and decision trees in R.&lt;/p&gt;
&lt;p&gt;Modeling credit risk for both personal and company loans is of major importance for banks. The probability that a debtor will default is a key component in getting to a measure for credit risk. While other models will be introduced in this course as well, you will learn about two model types that are often used in the credit scoring context; logistic regression and decision trees. You will learn how to use them in this particular context, and how these models are evaluated by banks.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Data Scientist with R (DataCamp, 95h)</title>
      <link>/post/data_scientist/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/data_scientist/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/certificates/Data_Scientist_R.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.datacamp.com/statement-of-accomplishment/track/b7606707581d354af34fb3ebe155054814de4354&#34;&gt;(Link do certificado para download)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ID da licença: b7606707581d354af34fb3ebe155054814de4354&lt;/p&gt;
&lt;div align=&#34;justify&#34;&gt;
&lt;p&gt;Este módulo é composto por um total de &lt;strong&gt;23 cursos&lt;/strong&gt;, totalizando uma carga horária de &lt;strong&gt;95 horas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Os cursos foram concluídas em uma ordem lógica, em conformidade com a lista abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to R (4h)&lt;/li&gt;
&lt;li&gt;Intermediate R (6h)&lt;/li&gt;
&lt;li&gt;Intermediate R - Practice (4h)&lt;/li&gt;
&lt;li&gt;Importing Data in R - Part 1 (3h)&lt;/li&gt;
&lt;li&gt;Importing Data in R - Part 2 (3h)&lt;/li&gt;
&lt;li&gt;Cleaning Data in R (4h)&lt;/li&gt;
&lt;li&gt;Importing &amp;amp; Cleaning Data in R: Case Studies (4h)&lt;/li&gt;
&lt;li&gt;Writing Functions in R (4h)&lt;/li&gt;
&lt;li&gt;Data Manipulation in R with dplyr (4h)&lt;/li&gt;
&lt;li&gt;Joining Data in R with dplyr (4h)&lt;/li&gt;
&lt;li&gt;Data Visualization in R (4h)&lt;/li&gt;
&lt;li&gt;Data Visualization with ggplot2 - Part 1 (5h)&lt;/li&gt;
&lt;li&gt;Data Visualization with ggplot2 - Part 1 (5h)&lt;/li&gt;
&lt;li&gt;Data Visualization with ggplot2 - Part 1 (6h)&lt;/li&gt;
&lt;li&gt;Introduction to Data (4h)&lt;/li&gt;
&lt;li&gt;Exploratory Data Analysis (4h)&lt;/li&gt;
&lt;li&gt;Exploratory Data Analysis in R: Case Study (4h)&lt;/li&gt;
&lt;li&gt;Correlation and Regression (4h)&lt;/li&gt;
&lt;li&gt;Foundations of Inference (4h)&lt;/li&gt;
&lt;li&gt;Machine Learning Toolbox (4h)&lt;/li&gt;
&lt;li&gt;Unsupervised Learning in R (4h)&lt;/li&gt;
&lt;li&gt;Text Mining: Bag of Words (4h)&lt;/li&gt;
&lt;li&gt;Reporting with R Markdown (3h)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Intro to SQL for Data Science (DataCamp, 4h)</title>
      <link>/post/sql_r/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sql_r/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/certificates/intro_sql_datascience.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.datacamp.com/statement-of-accomplishment/course/cc34be2d16d9d1940c907fbc021f7061bfb875e4&#34;&gt;(Link do certificado para download)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ID da licença: cc34be2d16d9d1940c907fbc021f7061bfb875e4&lt;/p&gt;
&lt;div align=&#34;justify&#34;&gt;
&lt;p&gt;The role of a data scientist is to turn raw data into actionable insights. Much of the world’s raw data—from electronic medical records to customer transaction histories—lives in organized collections of tables called relational databases. Therefore, to be an effective data scientist, you must know how to wrangle and extract data from these databases using a language called SQL (pronounced ess-que-ell, or sequel). This course teaches you everything you need to know to begin working with databases today!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Writing Efficient R Code (DataCamp, 4h)</title>
      <link>/post/write_efficient_code/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/write_efficient_code/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/certificates/writing_efficient_code_R.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.datacamp.com/statement-of-accomplishment/course/935f7ab3c5852e3013d1d75ddba9bbaec56d0dae&#34;&gt;(Link do certificado para download)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ID da licença: 935f7ab3c5852e3013d1d75ddba9bbaec56d0dae&lt;/p&gt;
&lt;div align=&#34;justify&#34;&gt;
&lt;p&gt;The beauty of R is that it is built for performing data analysis. The downside is that sometimes R can be slow, thereby obstructing our analysis. For this reason, it is essential to become familiar with the main techniques for speeding up your analysis, so you can reduce computational time and get insights as quickly as possible.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Data Analyst with R (DataCamp, 64h)</title>
      <link>/post/data_analysis_r/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data_analysis_r/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/certificates/Data_Analyst_R.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.datacamp.com/statement-of-accomplishment/track/54a99a39c5c74a0c3a69f25fb73fd70d5aee469f&#34;&gt;(Link do certificado para download)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ID da licença: 54a99a39c5c74a0c3a69f25fb73fd70d5aee469f&lt;/p&gt;
&lt;div align=&#34;justify&#34;&gt;
&lt;p&gt;Este módulo é composto por um total de &lt;strong&gt;16 cursos&lt;/strong&gt;, totalizando uma carga horária de &lt;strong&gt;64 horas&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Os cursos foram concluídas em uma ordem lógica, em conformidade com a lista abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to R (4h)&lt;/li&gt;
&lt;li&gt;Intermediate R (6h)&lt;/li&gt;
&lt;li&gt;Intermediate R - Practice (4h)&lt;/li&gt;
&lt;li&gt;Importing Data in R - Part 1 (3h)&lt;/li&gt;
&lt;li&gt;Importing Data in R - Part 2 (3h)&lt;/li&gt;
&lt;li&gt;Cleaning Data in R (4h)&lt;/li&gt;
&lt;li&gt;Importing &amp;amp; Cleaning Data in R: Case Studies (4h)&lt;/li&gt;
&lt;li&gt;Data Manipulation in R with dplyr (4h)&lt;/li&gt;
&lt;li&gt;Joining Data in R with dplyr (4h)&lt;/li&gt;
&lt;li&gt;Data Visualization in R (4h)&lt;/li&gt;
&lt;li&gt;Data Visualization with ggplot2 - Part 1 (5h)&lt;/li&gt;
&lt;li&gt;Introduction to Data (4h)&lt;/li&gt;
&lt;li&gt;Exploratory Data Analysis (4h)&lt;/li&gt;
&lt;li&gt;Exploratory Data Analysis in R: Case Study (4h)&lt;/li&gt;
&lt;li&gt;Correlation and Regression (4h)&lt;/li&gt;
&lt;li&gt;Reporting with R Markdown (3h)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>R Programmer (DataCamp, 40h)</title>
      <link>/post/programmer_r/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/programmer_r/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/certificates/R_Programmer.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.datacamp.com/statement-of-accomplishment/track/e39830bd2de0175aac745b6b6612537b6f9d22b4&#34;&gt;(Link do certificado para download)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ID da licença: e39830bd2de0175aac745b6b6612537b6f9d22b4&lt;/p&gt;
&lt;div align=&#34;justify&#34;&gt;
&lt;p&gt;Este módulo é composto por um total de &lt;strong&gt;10 cursos&lt;/strong&gt;, totalizando uma carga horária de &lt;strong&gt;40 horas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Os cursos foram concluídas em uma ordem lógica, em conformidade com a lista abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to R (4h)&lt;/li&gt;
&lt;li&gt;Intermediate R (6h)&lt;/li&gt;
&lt;li&gt;Intermediate R - Practice (4h)&lt;/li&gt;
&lt;li&gt;Importing Data in R - Part 1 (3h)&lt;/li&gt;
&lt;li&gt;Importing Data in R - Part 2 (3h)&lt;/li&gt;
&lt;li&gt;Cleaning Data in R (4h)&lt;/li&gt;
&lt;li&gt;Importing &amp;amp; Cleaning Data in R: Case Studies (4h)&lt;/li&gt;
&lt;li&gt;String Manipulation in R with stringr (4h)&lt;/li&gt;
&lt;li&gt;Writing Functions in R (4h)&lt;/li&gt;
&lt;li&gt;Object-Oriented Programming in R: S3 and R6 (4h)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Análise de dados do Youtube</title>
      <link>/post/youtube_scraper_markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/youtube_scraper_markdown/</guid>
      <description>&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;style type1 text/css&#39;&gt;
h1.title {
  text-align: center;
}
h4.author { 
  text-align: center;
}
h4.date { 
  text-align: center;
}
&lt;/style&gt;
&lt;style type=&#39;text/css&#39;&gt;
body{ /* Normal  */
  font-size: 14px;
  
td {  /* Table  */
  font-size: 14px;
}
h1.title {
  font-size: 24px;

}
h1 { /* Header 1 */
  font-size: 24px;

}
h2 { /* Header 2 */
    font-size: 16px;
}
h3 { /* Header 3 */
  font-size: 14px;

}
code.r{ /* Code block */
    font-size: 14px;
}
pre { /* Code block - determines code spacing between lines */
    font-size: 14px;
}
&lt;/style&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;img/youtubeApp/youtube_logo.png&#34; /&gt;
&lt;/p&gt;
&lt;div id=&#34;introducao&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.Introdução&lt;/h2&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;p&gt;Abordarei neste tópico uma forma de explorar informações contidas em um determinado canal do Youtube. Como exemplo, estarei demonstrando a obtenção e análise dos dados proveniente do canal “Nerdologia”, dos autores Atila Iamarino e Filipe Figueiredo. Os dados manipulados servem como base para a apresentação gráfica em um dashboard dinâmico, desenvolvido em Shiny (linguagem R). Por hora, proponho a análise quantitativa de métricas como visualizações, likes, dislikes e comentários. Bem como a análise textual das legendas geradas automaticamente pelo sistema do Youtube (quando habilitado pelo(s) autor(es) do canal).&lt;/p&gt;
Infelizmente o acesso ao texto completo dos comentários é limitado pela API do Youtube, portanto eles não foram analisados (motivos financeiros). A motivação para este estudo é meramente e unicamente por uma questão de curiosidade e pelo exercício da criatividade. Bem como uma forma divertida de se aperfeiçoar cada vez mais nas ferramentas da linguagem R (programação, métodos de exploração de dados, desenvolvimento de dashboards, etc.).
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;metodologia&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.Metodologia&lt;/h2&gt;
&lt;p&gt;Primeiramente foi realizada a extração dos dados brutos. Para as métricas quantitativas, utilizei a API do Youtube (necessita de cadastro prévio) via pacote &lt;strong&gt;tuber&lt;/strong&gt; do R. As legendas automáticas foram baixadas usando o pacote &lt;strong&gt;RCurl&lt;/strong&gt; juntamente com a ferramenta online &lt;strong&gt;diycaptions&lt;/strong&gt; ( &lt;a href=&#34;http://diycaptions.com&#34; class=&#34;uri&#34;&gt;http://diycaptions.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Os dados textuais foram processados pelas funções do pacote &lt;strong&gt;tm&lt;/strong&gt; e visualizados usando a ferramenta &lt;strong&gt;wordcloud&lt;/strong&gt;. No caso das métricas quantitativas do canal, os dados foram visualizados pela ferramenta &lt;strong&gt;plotly&lt;/strong&gt;. A visualização foi realizada dentro de um dashboard desenvolvido em shiny.&lt;/p&gt;
&lt;p align=&#39;center&#39;&gt;
&lt;img src=&#34;/img/youtubeApp/worflow.jpg&#34; /&gt;
&lt;p/&gt;
&lt;p&gt;Carregando as bibliotecas&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(plotly)
library(tuber)
library(stringr)
library(tm)
library(wordcloud)  
library(RCurl)
library(VennDiagram)
library(kableExtra)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;extraindo-metricas-do-canal&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.1.Extraindo métricas do canal&lt;/h3&gt;
&lt;p&gt;Primeiramente precisamos fazer a autenticação da nossa conta para poder acessar os dados do Youtube. É preciso realizar um cadastro prévio no site e fazer a requisição de chave de acesso (&lt;a href=&#34;https://developers.google.com/youtube/v3/&#34; class=&#34;uri&#34;&gt;https://developers.google.com/youtube/v3/&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;client_id &amp;lt;- &amp;#39;xxxxxxxx&amp;#39; 
key &amp;lt;- &amp;#39;xxxxxxxx&amp;#39;

yt_oauth(client_id, key)&lt;/code&gt;&lt;/pre&gt;
Agora podemos extrair os dados dos canal alvo, usando o ID dele. Caso não saiba onde encontrar esta informação, é aquela série de caracteres na URL (conforme destacado na figura).
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;/img/youtubeApp/nerdologia_canal.jpg&#34; /&gt;
&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_vid_nerdologia &amp;lt;- get_all_channel_video_stats(channel_id= &amp;#39;UClu474HMt895mVxZdlIHXEA&amp;#39;, mine= FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Precisamos formatar ele adequadamente, formatando os tipos de variáveis bem como fazendo uma limpeza na variável dos títulos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Dates
date_split_list &amp;lt;- strsplit(x= as.character(all_vid_nerdologia$publication_date), split= &amp;#39;T&amp;#39;)
date_split_list &amp;lt;- lapply(date_split_list, function(x){x[1]}) %&amp;gt;% unlist()
all_vid_nerdologia[&amp;#39;publication_date&amp;#39;] &amp;lt;- date_split_list
all_vid_nerdologia$publication_date &amp;lt;- as.Date(all_vid_nerdologia$publication_date)

# Variable class
all_vid_nerdologia$viewCount &amp;lt;-  as.numeric(all_vid_nerdologia$viewCount)
all_vid_nerdologia$likeCount &amp;lt;- as.numeric(all_vid_nerdologia$likeCount)
all_vid_nerdologia$dislikeCount &amp;lt;- as.numeric(all_vid_nerdologia$dislikeCount)
all_vid_nerdologia$favoriteCount &amp;lt;- as.numeric(all_vid_nerdologia$favoriteCount)
all_vid_nerdologia$commentCount &amp;lt;- as.numeric(all_vid_nerdologia$commentCount)

# Cleanning data title
all_vid_nerdologia$title &amp;lt;- gsub(&amp;#39;\\s\\|\\s.*$&amp;#39;, &amp;#39;&amp;#39;, all_vid_nerdologia$title)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;top-10-videos-com-mais-likes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Top 10 vídeos com mais Likes&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_vid_nerdologia %&amp;gt;%
    arrange(desc(likeCount)) %&amp;gt;%
    head(10) %&amp;gt;%
    select(title, likeCount, dislikeCount, commentCount) %&amp;gt;%
    kable(&amp;quot;html&amp;quot;) %&amp;gt;% 
    kable_styling(&amp;quot;striped&amp;quot;, full_width= F) %&amp;gt;%
    column_spec(1:4, bold= T) %&amp;gt;%
    row_spec(1:10, bold= T, color= &amp;quot;white&amp;quot;, background= &amp;quot;#3399ff&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
title
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
likeCount
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dislikeCount
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
commentCount
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
Suicídio
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
114725
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
695
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
5853
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
Buraco Negro
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
113815
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
422
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
4076
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
Tempo
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
104740
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
303
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
3456
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
CAOS E EFEITO BORBOLETA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
101124
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
423
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
2719
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
AS MARCAS TE MANIPULAM
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
101039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
305
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
2441
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
QUAL O SOCO MAIS FORTE?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
101037
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
595
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
6967
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
SER INVISÍVEL É POSSÍVEL?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
100276
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
221
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
2531
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
LEVANTE ZUMBI
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
99738
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
294
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
3454
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
O que somos nós?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
98443
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
308
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
4006
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
Mistérios do Fundo do Mar
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
97193
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
577
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #3399ff;&#34;&gt;
2506
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-videos-com-mais-dislikes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Top 10 vídeos com mais Dislikes&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_vid_nerdologia %&amp;gt;%
    arrange(desc(dislikeCount)) %&amp;gt;%
    head(10) %&amp;gt;%
    select(title, dislikeCount, likeCount, commentCount) %&amp;gt;%
    kable(&amp;quot;html&amp;quot;) %&amp;gt;% 
    kable_styling(&amp;quot;striped&amp;quot;, full_width= F) %&amp;gt;%
    column_spec(1:4, bold= T) %&amp;gt;%
    row_spec(1:10, bold= T, color= &amp;quot;white&amp;quot;, background= &amp;quot;#ff3333&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
title
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dislikeCount
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
likeCount
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
commentCount
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Sexismo
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
13984
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
93561
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
15642
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Quem tem mais poder?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
4093
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
91474
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
14424
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Existe cura gay?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
2787
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
83583
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
6110
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Aquecimento Global
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1854
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
49424
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
3921
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Como funciona a Astrologia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1793
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
74924
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
5447
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Maioridade Penal
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1721
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
68294
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
3179
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Por que o Merthiolate não arde mais?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1657
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
59323
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
2362
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Motor perpétuo? Carro a água?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1629
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
52140
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
3355
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Coxinhas vs. Petralhas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1312
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
59094
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
3632
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
Batman vs Superman
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
1175
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
66649
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #ff3333;&#34;&gt;
2337
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-videos-com-mais-comentarios&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Top 10 vídeos com mais comentários&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_vid_nerdologia %&amp;gt;%
    arrange(desc(commentCount)) %&amp;gt;%
    head(10) %&amp;gt;%
    select(title, commentCount, dislikeCount, likeCount) %&amp;gt;%
    kable(&amp;quot;html&amp;quot;) %&amp;gt;% 
    kable_styling(&amp;quot;striped&amp;quot;, full_width= F) %&amp;gt;%
    column_spec(1:4, bold= T) %&amp;gt;%
    row_spec(1:10, bold= T, color= &amp;quot;white&amp;quot;, background= &amp;quot;#4d9900&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
title
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
commentCount
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dislikeCount
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
likeCount
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
Sexismo
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
15642
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
13984
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
93561
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
Quem tem mais poder?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
14424
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
4093
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
91474
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
QUAL O SOCO MAIS FORTE?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
6967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
595
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
101037
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
É só uma teoria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
6120
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
690
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
92609
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
Existe cura gay?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
6110
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
2787
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
83583
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
Suicídio
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
5853
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
695
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
114725
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
Como funciona a Astrologia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
5447
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
1793
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
74924
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
Fomos à Lua?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
5132
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
1120
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
64036
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
COMO MATAR O WOLVERINE
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
4979
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
488
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
89501
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
POSSESSÃO, ABDUÇÃO OU PARALISIA DO SONO?
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
4901
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
355
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;font-weight: bold;color: white;background-color: #4d9900;&#34;&gt;
90767
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Agora, deixarei salvo o objeto da tabela processada, para carregar dentro do meu dashboard.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;save(file= &amp;#39;all_vid_nerdologia.RData&amp;#39;, all_vid_nerdologia)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;extraindo-dados-textuais-das-legendas-e-formatando&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.1.Extraindo dados textuais das legendas e formatando&lt;/h3&gt;
&lt;p&gt;A função do pacote tuber que realiza a extração das legendas não está funcionando mais, por isso eu optei por um modo semi-rudimentar para fazer isso (porque demora um pouco :/). Tive que colocar um delay de 30 segundos em cada requisição pois se formos muito rápido acabamos tendo a conexão interrompinda.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url_request &amp;lt;- paste0(&amp;#39;http://diycaptions.com/php/get-automatic-captions-as-txt.php?id=&amp;#39;,  all_vid_nerdologia$id, &amp;#39;&amp;amp;language=asr&amp;#39;)     

html_page &amp;lt;- list()

for(i in 1:length(url_request) ){
    
    html_page[i] &amp;lt;- getURL(url_request[i])
    
    Sys.sleep(30)
}

save(file= &amp;#39;html_page.RObj&amp;#39;, html_page)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Precisarei da minha lista de texto ordenado pela data quanto for retornar um index do plot&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_vid_nerdologia[&amp;#39;index&amp;#39;] &amp;lt;- 1:nrow(all_vid_nerdologia)
all_vid_nerdologia &amp;lt;- all_vid_nerdologia %&amp;gt;% arrange(publication_date)
html_page_text_sorted &amp;lt;- html_page_text[all_vid_nerdologia$index]
save(file=&amp;#39;html_page_text_sorted.RData&amp;#39;, html_page_text_sorted)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora farei o pré-tratamento dos dados textuais e a limpeza propriamente dita&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Removing tags blocks
html_page_text &amp;lt;- lapply(html_page, function(x){
    
    split_1 &amp;lt;- strsplit(x[[1]], &amp;#39;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;#39;)[[1]][2]
    strsplit(split_1[[1]], &amp;#39;\t\t&amp;lt;/div&amp;gt;&amp;#39;)[[1]][1]
    
})

# Saving object for individual process
# save(file = &amp;#39;html_page_text.RData&amp;#39;, html_page_text)

# Generating corpus text for all avaiable data
text_df_total &amp;lt;- data.frame(doc_id= all_vid_nerdologia$id, text= unlist(html_page_text), stringsAsFactors= FALSE , drop=FALSE)

text_corpus_df &amp;lt;- Corpus(DataframeSource(text_df_total))

text_corpus_df_filtered &amp;lt;- text_corpus_df %&amp;gt;%
    tm_map(stripWhitespace)  %&amp;gt;%    
    tm_map(removePunctuation) %&amp;gt;%                              
    tm_map(removeNumbers)   %&amp;gt;%                               
    tm_map(removeWords, c(stopwords(&amp;quot;portuguese&amp;quot;))) %&amp;gt;%  
    tm_map(removeNumbers) %&amp;gt;%  
    tm_map(stripWhitespace) %&amp;gt;%    
    tm_map(content_transformer(tolower))

# Creanting a term matrix
corpus_tf &amp;lt;- TermDocumentMatrix(text_corpus_df_filtered)

corpus_m &amp;lt;- as.matrix(corpus_tf)

corpus_m_sorted &amp;lt;- sort(rowSums(as.matrix(corpus_m)), decreasing= TRUE)

df_total &amp;lt;- data.frame(word= names(corpus_m_sorted), freq= as.numeric(corpus_m_sorted))

df_total$word &amp;lt;- as.character(df_total$word)

df_total &amp;lt;- df_total[which(nchar(df_total$word) &amp;gt; 4), ]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O gráfico de frequência total das palavras também deverá aparecer. Porém, lá na ferramenta irei adicionar mecanismos de controle de filtro.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wordcloud(df_total$word, df_total$freq, min.freq= 10, max.words= 150, random.order= FALSE, rot.per= 0.35, colors=brewer.pal(8, &amp;quot;Dark2&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p align=&#39;center&#39;&gt;
&lt;img src=&#34;/img/youtubeApp/word_cloud.png&#34; /&gt;
&lt;p/&gt;
&lt;p&gt;Farei também uma word cloud para os títulos dos vídeos postados&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;text_df_total &amp;lt;- data.frame(doc_id= all_vid_nerdologia$title, text= all_vid_nerdologia$title, stringsAsFactors= FALSE , drop=FALSE)

text_corpus_df &amp;lt;- Corpus(DataframeSource(text_df_total))

text_corpus_df_filtered &amp;lt;- text_corpus_df %&amp;gt;%
    tm_map(stripWhitespace)  %&amp;gt;%    
    tm_map(removePunctuation) %&amp;gt;%                              
    tm_map(removeNumbers)   %&amp;gt;%                               
    tm_map(removeWords, c(stopwords(&amp;quot;portuguese&amp;quot;))) %&amp;gt;%  
    tm_map(removeNumbers) %&amp;gt;%  
    tm_map(stripWhitespace) %&amp;gt;%    
    tm_map(content_transformer(tolower))

# Creanting a term matrix
corpus_tf &amp;lt;- TermDocumentMatrix(text_corpus_df_filtered)

corpus_m &amp;lt;- as.matrix(corpus_tf)

corpus_m_sorted &amp;lt;- sort(rowSums(as.matrix(corpus_m)), decreasing= TRUE)

df_total &amp;lt;- data.frame(word= names(corpus_m_sorted), freq= as.numeric(corpus_m_sorted))

df_total$word &amp;lt;- as.character(df_total$word)

df_total_titulo &amp;lt;- df_total[which(nchar(df_total$word) &amp;gt; 2), ]

wordcloud(df_total_titulo$word, df_total_titulo$freq, min.freq= 2, max.words= 100, random.order= FALSE, rot.per= 0.35, colors=brewer.pal(8, &amp;quot;Dark2&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/youtube_scraper_markdown_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;100%&#34; height=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O gráfico do dashboard deve ser similar a este, porém, responsivo com mais informações e opções de filtro.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_vid_nerdologia %&amp;gt;%
    gather(key= type_counts, value= counts, 
           c(likeCount, dislikeCount, commentCount, viewCount)) %&amp;gt;%
    filter(str_detect(&amp;#39;likeCount|dislikeCount|commentCount&amp;#39;, type_counts)) %&amp;gt;%
    ggplot(aes(x= publication_date, y= as.numeric(counts), col= type_counts)) +
    geom_line(size=1, alpha=0.7) +
    geom_point(size=1) +
    scale_x_date() +
    theme_bw() +
    scale_color_manual(values = c(&amp;#39;#440154FF&amp;#39;, &amp;#39;#39568CFF&amp;#39;, &amp;#39;#29AF7FFF&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/youtube_scraper_markdown_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;100%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;criando-um-dashboard-dinamico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Criando um dashboard dinâmico&lt;/h2&gt;
&lt;p&gt;Para prover uma visualização diferenciada dos dados, optei por criar um dashboard dinâmico, reativo ao cursor do mouse e que também aceita diferentes parâmetros para gerar os resultados. Assim, podemos abranger um pouco mais do nosso aprendizado. :D&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;/img/youtubeApp/ideia.jpg&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;No dashboard, os dados da métrica e os dados textuais são carregados pré-processados. No caso, ele irá apenas realizar a apresentação dinâmica dos resultados.&lt;/p&gt;
&lt;p&gt;Este é o código, também disponível no github (por favor, não fiquei com raiva pela desorganização).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(shinydashboard)
library(highcharter)
library(ggplot2)
library(dplyr)
library(plotly)
library(tm)
library(wordcloud)  
library(VennDiagram)
library(kableExtra)

load(&amp;#39;all_vid_nerdologia.RData&amp;#39;)
load(&amp;#39;html_page_text.RData&amp;#39;)
load(&amp;#39;html_page_text_sorted.RData&amp;#39;)

ui &amp;lt;- dashboardPage(
    # Header ----
    dashboardHeader(title = &amp;quot;Youtube metrics&amp;quot;),
    
    # Sidebar content ----
    dashboardSidebar(collapsed = TRUE,
                     sidebarMenu(
                         menuItem(&amp;quot;Dashboard&amp;quot;, tabName = &amp;quot;dashboard&amp;quot;, icon = icon(&amp;quot;dashboard&amp;quot;))
                     )
    ),
    
    # Body content ----
    dashboardBody(
        
        includeCSS(&amp;quot;www/custom.css&amp;quot;),
        tabItems(
            # First tab content
            tabItem(tabName= &amp;quot;dashboard&amp;quot;,
                    
                    fluidRow(
                        column(width= 7,
                               tags$blockquote((&amp;quot;Metrics from video captions&amp;quot;)),
                               plotlyOutput(outputId = &amp;#39;metrics_total_plot&amp;#39;, height= &amp;#39;400px&amp;#39;)
                               
                        ),
                        column(width= 5,
                               wellPanel(
                                   plotOutput(outputId= &amp;#39;cursor_wc_plot&amp;#39;, height= &amp;#39;400px&amp;#39;)
                               )
                        )
                    ),
                    
                    fluidRow(
                        column(3,
                               tags$blockquote((&amp;quot;Top 1 videos&amp;quot;)),
                               valueBoxOutput(&amp;quot;likebox&amp;quot;, width = 15),
                               valueBoxOutput(&amp;quot;dislikebox&amp;quot;, width = 15),
                               valueBoxOutput(&amp;quot;commentbox&amp;quot;, width = 15)
                        ),
                        column(4,
                               tags$blockquote(&amp;quot;Most frequent words in video titles&amp;quot;, align=&amp;quot;left&amp;quot;),
                               plotOutput(outputId= &amp;#39;title_wc_plot&amp;#39;, width=500, height=400)
                        ),
                        column(5,
                               tags$blockquote(&amp;quot;Estimated number of words spoken in video&amp;quot;, align=&amp;quot;left&amp;quot;),
                               plotlyOutput(outputId = &amp;#39;numb_spoken_words&amp;#39;, height= &amp;#39;400px&amp;#39;)   
                        )
                    )
                    
            )
        )
    )
)

server &amp;lt;- function(input, output){
    
    # Plot wordcloud total ----
    output$metrics_total_plot &amp;lt;- renderPlotly({
        
        all_vid_nerdologia %&amp;gt;%
            arrange(publication_date) %&amp;gt;%
            plot_ly(source = &amp;quot;source&amp;quot;) %&amp;gt;%
            add_trace(x = ~publication_date, y = ~viewCount, 
                      name = &amp;#39;View count&amp;#39;, type = &amp;#39;scatter&amp;#39;, 
                      mode =&amp;quot;markers+lines&amp;quot;, text = ~paste(&amp;#39;Video: &amp;#39;, title),
                      line = list(color = &amp;#39;#440154FF &amp;#39;, width = 2)) %&amp;gt;%
            add_trace(x = ~publication_date, y = ~likeCount, 
                      name = &amp;#39;Like count&amp;#39;, type = &amp;#39;scatter&amp;#39;,
                      mode =&amp;quot;markers+lines&amp;quot;, text = ~paste(&amp;#39;Video: &amp;#39;, title),
                      line = list(color = &amp;#39;#39568CFF&amp;#39;, width = 2)) %&amp;gt;%
            add_trace(x = ~publication_date, y = ~dislikeCount,
                      name = &amp;#39;Dislike count&amp;#39;, type = &amp;#39;scatter&amp;#39;, 
                      mode = &amp;quot;markers+lines&amp;quot;, text = ~paste(&amp;#39;Video: &amp;#39;, title),
                      line = list(color = &amp;#39;#29AF7FFF&amp;#39;, width = 2)) %&amp;gt;%
            add_trace(x = ~publication_date, y = ~commentCount,
                      name = &amp;#39;Comment count&amp;#39;, type = &amp;#39;scatter&amp;#39;, 
                      mode = &amp;quot;markers+lines&amp;quot;, text = ~paste(&amp;#39;Video: &amp;#39;, title),
                      line = list(color = &amp;#39;#FDE725FF&amp;#39;, width = 2)) %&amp;gt;%
            layout(xaxis = list(title = &amp;quot;&amp;quot;),
                   yaxis = list (title = &amp;quot;Metric&amp;#39;s count&amp;quot;),
                   font =  list(size = 12),
                   hovermode = &amp;#39;compare&amp;#39;,
                   legend = list(orientation = &amp;#39;h&amp;#39;)) 
    })
    
    # Plot over cursor selected word cloud ----
    output$cursor_wc_plot &amp;lt;- renderPlot({
        
        eventdata &amp;lt;- event_data(&amp;quot;plotly_hover&amp;quot;, source = &amp;quot;source&amp;quot;)
        
        validate(need(!is.null(eventdata), &amp;quot;Pass the mouse over the point :)&amp;quot;))
        
        cursor_id &amp;lt;- as.numeric(eventdata$pointNumber)[1] + 1
        
        all_vid_nerdologia &amp;lt;- all_vid_nerdologia %&amp;gt;%
            arrange(publication_date)
        
        text_df_cursor &amp;lt;- data.frame(doc_id= all_vid_nerdologia$id[ cursor_id ], 
                                     text= unlist(html_page_text_sorted[ cursor_id ]), 
                                     stringsAsFactors= FALSE , drop=FALSE)
        
        cursor_corpus_df &amp;lt;- Corpus(DataframeSource(text_df_cursor))
        
        cursor_corpus_df_filtered &amp;lt;- cursor_corpus_df %&amp;gt;%
            tm_map(stripWhitespace)  %&amp;gt;%    
            tm_map(removePunctuation) %&amp;gt;%                              
            tm_map(removeNumbers)   %&amp;gt;%                               
            tm_map(removeWords, c(stopwords(&amp;quot;portuguese&amp;quot;))) %&amp;gt;%  
            tm_map(removeNumbers) %&amp;gt;%  
            tm_map(stripWhitespace) %&amp;gt;%    
            tm_map(content_transformer(tolower))
        
        # Creanting a term matrix
        corpus_tf &amp;lt;- TermDocumentMatrix(cursor_corpus_df_filtered)
        
        cursor_corpus_m &amp;lt;- as.matrix(corpus_tf)
        
        cursor_corpus_m_sorted &amp;lt;- sort(rowSums(as.matrix(cursor_corpus_m)), decreasing= TRUE)
        
        df_cursor_final &amp;lt;- data.frame(word= names(cursor_corpus_m_sorted), freq= as.numeric(cursor_corpus_m_sorted))
        
        df_cursor_final$word &amp;lt;- as.character(df_cursor_final$word)
        
        df_cursor_final &amp;lt;- df_cursor_final[which(nchar(df_cursor_final$word) &amp;gt; 3), ]
        
        wordcloud(df_cursor_final$word, df_cursor_final$freq, min.freq = 2, max.words= 50,
                  random.order= FALSE, colors=brewer.pal(8, &amp;quot;Dark2&amp;quot;), scale=c(4, 0.5))
    })
    
    # Metrics top videos box ----
    # Like box
    output$likebox &amp;lt;- renderValueBox({
        toplike &amp;lt;- all_vid_nerdologia %&amp;gt;%
            arrange(desc(likeCount)) %&amp;gt;%
            head(10)
        
        valueBox(value = tags$p(toplike$title[1], style = &amp;quot;font-size: 80%;&amp;quot;),
                 subtitle = paste0(&amp;quot;Most liked video with: &amp;quot;, toplike$likeCount[1], &amp;quot; likes&amp;quot;), 
                 icon = icon(&amp;quot;thumbs-up&amp;quot;, lib = &amp;quot;glyphicon&amp;quot;),
                 color = &amp;quot;blue&amp;quot; 
        )
    })
    
    # Dislike box
    output$dislikebox &amp;lt;- renderValueBox({
        topdislike &amp;lt;- all_vid_nerdologia %&amp;gt;%
            arrange(desc(dislikeCount)) %&amp;gt;%
            head(10)
        
        valueBox(value = tags$p(topdislike$title[1], style = &amp;quot;font-size: 80%;&amp;quot;),
                 subtitle = paste0(&amp;quot;Most disliked video with: &amp;quot;, topdislike$dislikeCount[1], &amp;quot; dislikes&amp;quot;),
                 icon = icon(&amp;quot;thumbs-down&amp;quot;, lib = &amp;quot;glyphicon&amp;quot;),
                 color = &amp;quot;red&amp;quot; 
        )
    })
    
    # Comments box
    output$commentbox &amp;lt;- renderValueBox({
        topcomment &amp;lt;- all_vid_nerdologia %&amp;gt;%
            arrange(desc(commentCount)) %&amp;gt;%
            head(10)
        
        valueBox(value = tags$p(topcomment$title[1], style = &amp;quot;font-size: 80%;&amp;quot;),
                 subtitle = paste0(&amp;quot;Most Commented video with: &amp;quot;, topcomment$commentCount[1], &amp;quot; comments&amp;quot;),
                 icon = icon(&amp;quot;comment&amp;quot;, lib = &amp;quot;font-awesome&amp;quot;),
                 color = &amp;quot;orange&amp;quot; 
        )
    })
    
    # Word cloud topic&amp;#39;s titles plot ----
    output$title_wc_plot &amp;lt;- renderPlot({
        
        title_df &amp;lt;- data.frame(doc_id= all_vid_nerdologia$title, text= all_vid_nerdologia$title, stringsAsFactors= FALSE , drop=FALSE)
        
        title_corpus &amp;lt;- Corpus(DataframeSource(title_df))
        
        title_corpus_filtered &amp;lt;- title_corpus %&amp;gt;%
            tm_map(stripWhitespace)  %&amp;gt;%    
            tm_map(removePunctuation) %&amp;gt;%                              
            tm_map(removeNumbers)   %&amp;gt;%                               
            tm_map(removeWords, c(stopwords(&amp;quot;portuguese&amp;quot;))) %&amp;gt;%  
            tm_map(removeNumbers) %&amp;gt;%  
            tm_map(stripWhitespace) %&amp;gt;%    
            tm_map(content_transformer(tolower))
        
        # Creanting a term matrix
        corpus_tf &amp;lt;- TermDocumentMatrix(title_corpus_filtered)
        
        corpus_m &amp;lt;- as.matrix(corpus_tf)
        
        corpus_m_sorted &amp;lt;- sort(rowSums(as.matrix(corpus_m)), decreasing= TRUE)
        
        df_total &amp;lt;- data.frame(word= names(corpus_m_sorted), freq= as.numeric(corpus_m_sorted))
        
        df_total$word &amp;lt;- as.character(df_total$word)
        
        df_total_titulo &amp;lt;- df_total[which(nchar(df_total$word) &amp;gt; 2), ]
        
        wordcloud(df_total_titulo$word, df_total_titulo$freq, min.freq= 2,
                  max.words= 100, random.order= FALSE,
                  rot.per= 0.15, colors=brewer.pal(8, &amp;quot;Dark2&amp;quot;),
                  scale=c(5, .7))
        
    })
    
    # Plot number of spoken words
    output$numb_spoken_words &amp;lt;- renderPlotly({
        all_vid_nerdologia %&amp;gt;%
            arrange(publication_date) %&amp;gt;%
            mutate(n_words_spoken =  str_count(html_page_text_sorted, &amp;quot;\\S+&amp;quot;)) %&amp;gt;%
            plot_ly() %&amp;gt;%
            add_trace(x = ~publication_date, y = ~n_words_spoken, 
                      name = &amp;#39;Number of words spoken during video recording&amp;#39;, type = &amp;#39;scatter&amp;#39;, 
                      mode = &amp;quot;markers+lines&amp;quot;, text = ~paste(&amp;#39;Video: &amp;#39;, title, &amp;#39;\n&amp;#39;, &amp;#39;Number of words: &amp;#39;, n_words_spoken),
                      line = list(color = &amp;#39;#004080&amp;#39;, width = 4)) %&amp;gt;%
            layout(xaxis = list(title = &amp;quot;Publication date&amp;quot;),
                   yaxis = list (title = &amp;quot;Number of words&amp;quot;),
                   font =  list(size = 14),
                   hovermode = &amp;#39;compare&amp;#39;,
                   legend = list(orientation = &amp;#39;h&amp;#39;)) 
    })
    
}

shinyApp(ui, server)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;este-e-o-resultado&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Este é o resultado:&lt;/h3&gt;
&lt;p&gt;Em &lt;strong&gt;(I)&lt;/strong&gt; temos um gráfico de linha que segue de acordo com o tempo do início até o presente momento do canal. Cada ponto se trata de um vídeo sendo o gráfico responsivo ao cursor do mouse, também com a legenda clicável. Toda vez que o usuário passar o cursor sobre um ponto, automaticamente será gerado um wordcloud &lt;strong&gt;(II)&lt;/strong&gt; deste vídeo (no caso, o que o Youtuber falou). Em &lt;strong&gt;(III)&lt;/strong&gt; temos os Top vídeos mais curtidos, odiados e comentados. O wordcloud em &lt;strong&gt;(IV)&lt;/strong&gt; foi gerado a partir dos títulos dos vídeos do canal. Por fim, fiz uma contagem de palavras ditas ao longo do tempo (deveria ter plotado o tempo de vídeo….será?). Me parece que o número de views declina no decorrer do tempo ao passo que a quantidade de palavras ditas aumenta. D:. Pode ser uma relação errônea.&lt;/p&gt;
&lt;p&gt;O dashboard online pode ser acessado neste Link :D&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://daviinada.shinyapps.io/youtubeapp/&#34; class=&#34;uri&#34;&gt;https://daviinada.shinyapps.io/youtubeapp/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/youtubeApp/dashboard.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
